#!/usr/bin/env python3
"""
Script de prueba para verificar los tipos de atenci√≥n disponibles
"""

def test_tipos_atencion_disponibles():
    """Prueba los tipos de atenci√≥n disponibles"""
    print("üß™ Probando tipos de atenci√≥n disponibles...")
    
    # Tipos de atenci√≥n soportados
    tipos_atencion = [
        'fisioterapia',
        'fonoaudiologia', 
        'psicologia',
        'nutricion',
        'kinesiologia',
        'terapia_ocupacional',
        'enfermeria',
        'urgencia'
    ]
    
    print(f"‚úÖ Tipos de atenci√≥n disponibles: {len(tipos_atencion)}")
    for i, tipo in enumerate(tipos_atencion, 1):
        print(f"   {i}. {tipo}")
    
    return tipos_atencion

def test_casos_por_tipo_atencion():
    """Prueba casos de ejemplo por cada tipo de atenci√≥n"""
    print("\nüìã Probando casos por tipo de atenci√≥n...")
    
    casos_prueba = [
        {
            'motivo': 'Dolor lumbar de 3 semanas',
            'tipo_atencion': 'fisioterapia',
            'descripcion': 'Fisioterapia - Dolor lumbar'
        },
        {
            'motivo': 'Dificultad para tragar alimentos',
            'tipo_atencion': 'fonoaudiologia',
            'descripcion': 'Fonoaudiolog√≠a - Problemas de degluci√≥n'
        },
        {
            'motivo': 'Ansiedad y estr√©s laboral',
            'tipo_atencion': 'psicologia',
            'descripcion': 'Psicolog√≠a - Ansiedad'
        },
        {
            'motivo': 'P√©rdida de peso y fatiga',
            'tipo_atencion': 'nutricion',
            'descripcion': 'Nutrici√≥n - P√©rdida de peso'
        },
        {
            'motivo': 'Dolor en rodilla al caminar',
            'tipo_atencion': 'kinesiologia',
            'descripcion': 'Kinesiolog√≠a - Dolor articular'
        },
        {
            'motivo': 'Dificultad para realizar actividades diarias',
            'tipo_atencion': 'terapia_ocupacional',
            'descripcion': 'Terapia Ocupacional - Limitaciones funcionales'
        },
        {
            'motivo': 'Control de presi√≥n arterial',
            'tipo_atencion': 'enfermeria',
            'descripcion': 'Enfermer√≠a - Control de signos vitales'
        },
        {
            'motivo': 'Dolor agudo en el pecho',
            'tipo_atencion': 'urgencia',
            'descripcion': 'Urgencia - Dolor tor√°cico'
        }
    ]
    
    for i, caso in enumerate(casos_prueba, 1):
        print(f"\nüìã Caso {i}: {caso['descripcion']}")
        print(f"Motivo: {caso['motivo']}")
        print(f"Tipo de atenci√≥n: {caso['tipo_atencion']}")
        print(f"‚úÖ Caso v√°lido para tipo de atenci√≥n: {caso['tipo_atencion']}")
        print("-" * 60)

def test_validacion_tipos_atencion():
    """Valida que los tipos de atenci√≥n sean correctos"""
    print("\n‚úÖ Validando tipos de atenci√≥n...")
    
    tipos_validos = {
        'fisioterapia': 'Especialidad en rehabilitaci√≥n f√≠sica',
        'fonoaudiologia': 'Especialidad en comunicaci√≥n y degluci√≥n',
        'psicologia': 'Especialidad en salud mental',
        'nutricion': 'Especialidad en alimentaci√≥n y nutrici√≥n',
        'kinesiologia': 'Especialidad en movimiento y rehabilitaci√≥n',
        'terapia_ocupacional': 'Especialidad en actividades de la vida diaria',
        'enfermeria': 'Especialidad en cuidados de salud',
        'urgencia': 'Atenci√≥n de emergencias m√©dicas'
    }
    
    for tipo, descripcion in tipos_validos.items():
        print(f"‚úÖ {tipo}: {descripcion}")

def test_mapeo_especialidades():
    """Prueba el mapeo de tipos de atenci√≥n a especialidades"""
    print("\nüó∫Ô∏è Probando mapeo de tipos de atenci√≥n a especialidades...")
    
    mapeo_especialidades = {
        'fisioterapia': ['Fisioterapia', 'Rehabilitaci√≥n'],
        'fonoaudiologia': ['Fonoaudiolog√≠a', 'Logopedia'],
        'psicologia': ['Psicolog√≠a', 'Psicolog√≠a Cl√≠nica'],
        'nutricion': ['Nutrici√≥n', 'Nutrici√≥n Cl√≠nica'],
        'kinesiologia': ['Kinesiolog√≠a', 'Fisioterapia'],
        'terapia_ocupacional': ['Terapia Ocupacional'],
        'enfermeria': ['Enfermer√≠a', 'Enfermer√≠a Cl√≠nica'],
        'urgencia': ['Medicina de Urgencias', 'Emergencias']
    }
    
    for tipo_atencion, especialidades in mapeo_especialidades.items():
        print(f"üè• {tipo_atencion.upper()}:")
        for especialidad in especialidades:
            print(f"   ‚Ä¢ {especialidad}")

def main():
    """Funci√≥n principal de pruebas"""
    print("ü§ñ PRUEBAS DE TIPOS DE ATENCI√ìN")
    print("=" * 60)
    
    try:
        # Prueba 1: Tipos de atenci√≥n disponibles
        test_tipos_atencion_disponibles()
        
        # Prueba 2: Casos por tipo de atenci√≥n
        test_casos_por_tipo_atencion()
        
        # Prueba 3: Validaci√≥n de tipos
        test_validacion_tipos_atencion()
        
        # Prueba 4: Mapeo de especialidades
        test_mapeo_especialidades()
        
        print("\n‚úÖ Todas las pruebas completadas exitosamente!")
        print("\nüéØ Resumen de funcionalidades probadas:")
        print("   ‚Ä¢ Validaci√≥n de tipos de atenci√≥n disponibles")
        print("   ‚Ä¢ Casos de ejemplo por especialidad")
        print("   ‚Ä¢ Mapeo correcto de tipos a especialidades")
        print("   ‚Ä¢ Estructura de datos para tipos de atenci√≥n")
        
    except Exception as e:
        print(f"\n‚ùå Error durante las pruebas: {e}")
        import traceback
        traceback.print_exc()

if __name__ == "__main__":
    main() 