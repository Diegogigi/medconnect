#!/usr/bin/env python3
"""
Script para probar que los papers se muestren correctamente en la sidebar
"""

import requests
import json
import time


def test_sidebar_papers():
    """Prueba que los papers se muestren en la sidebar"""

    print("üß™ Probando visualizaci√≥n de papers en la sidebar...")
    print("=" * 60)

    # URL base
    base_url = "http://localhost:5000"

    # Credenciales
    credentials = {"email": "diego.castro.lagos@gmail.com", "password": "Muerto6900"}

    # Crear sesi√≥n
    session = requests.Session()

    try:
        print("üîê Paso 1: Login...")
        login_response = session.post(f"{base_url}/login", data=credentials, timeout=10)

        if login_response.status_code not in [200, 302]:
            print(f"‚ùå Error en login: {login_response.status_code}")
            return

        print("‚úÖ Login exitoso")

        print("\nüîç Paso 2: Probar b√∫squeda de papers...")
        print("-" * 40)

        # Caso de prueba espec√≠fico
        caso_prueba = {
            "consulta": "busca papers de dolor de hombro",
            "contexto_clinico": {
                "motivoConsulta": "Dolor de hombro por golpe",
                "tipoAtencion": "Kinesiolog√≠a",
                "pacienteNombre": "Paciente Test",
                "pacienteRut": "12345678-9",
                "pacienteEdad": "35",
            },
        }

        try:
            response = session.post(
                f"{base_url}/api/copilot/analyze-enhanced",
                headers={"Content-Type": "application/json"},
                json=caso_prueba,
                timeout=30,
            )

            print(f"Status Code: {response.status_code}")

            if response.status_code == 200:
                try:
                    data = response.json()
                    print("‚úÖ Respuesta JSON exitosa")

                    if data.get("success"):
                        print("‚úÖ An√°lisis completado exitosamente")

                        # Verificar evidencia cient√≠fica
                        if "evidence" in data and data["evidence"]:
                            print(f"üìö Papers encontrados: {len(data['evidence'])}")

                            # Verificar estructura de papers para sidebar
                            for i, paper in enumerate(data["evidence"][:3], 1):
                                print(f"\nüìÑ Paper {i} para sidebar:")
                                print(
                                    f"   ‚úÖ T√≠tulo: {paper.get('titulo', paper.get('title', 'Sin t√≠tulo'))}"
                                )
                                print(
                                    f"   ‚úÖ A√±o: {paper.get('a√±o_publicacion', paper.get('year', 'N/A'))}"
                                )
                                print(f"   ‚úÖ DOI: {paper.get('doi', 'Sin DOI')}")
                                print(
                                    f"   ‚úÖ Relevancia: {paper.get('relevancia_score', 0):.2f}"
                                )

                                # Verificar campos necesarios para sidebar
                                campos_requeridos = [
                                    "titulo",
                                    "a√±o_publicacion",
                                    "doi",
                                    "relevancia_score",
                                ]
                                campos_faltantes = []

                                for campo in campos_requeridos:
                                    if not paper.get(campo):
                                        campos_faltantes.append(campo)

                                if campos_faltantes:
                                    print(f"   ‚ö†Ô∏è Campos faltantes: {campos_faltantes}")
                                else:
                                    print(
                                        f"   ‚úÖ Todos los campos requeridos presentes"
                                    )

                                # Verificar cita APA
                                if paper.get("cita_apa"):
                                    print(
                                        f"   ‚úÖ Cita APA: {paper['cita_apa'][:80]}..."
                                    )
                                else:
                                    print(f"   ‚ùå Sin cita APA")

                                # Verificar resumen
                                if paper.get("resumen") or paper.get("abstract"):
                                    print(f"   ‚úÖ Resumen disponible")
                                else:
                                    print(f"   ‚ö†Ô∏è Sin resumen")
                        else:
                            print("‚ùå No se encontraron papers cient√≠ficos")

                        # Verificar an√°lisis cl√≠nico
                        if "clinical_analysis" in data:
                            print("üí° An√°lisis cl√≠nico disponible")
                        else:
                            print("‚ö†Ô∏è Sin an√°lisis cl√≠nico")

                    else:
                        print("‚ùå An√°lisis fall√≥")
                        print(f"Error: {data.get('error', 'Desconocido')}")

                except json.JSONDecodeError:
                    print("‚ùå Respuesta no es JSON v√°lido")
                    print(f"Respuesta: {response.text[:300]}...")

            else:
                print(f"‚ùå Error HTTP: {response.status_code}")
                print(f"Respuesta: {response.text[:200]}...")

        except Exception as e:
            print(f"‚ùå Error en la prueba: {e}")

        print("\n" + "=" * 60)
        print("üìã Instrucciones para verificar en el navegador:")
        print("\n1. Abre el navegador y ve a la aplicaci√≥n")
        print("2. Inicia sesi√≥n con las credenciales")
        print("3. Completa el formulario con datos del paciente")
        print("4. Escribe en el chat: 'busca papers de dolor de hombro'")
        print("5. Verifica en la sidebar (panel derecho):")
        print("   - Secci√≥n 'Evidencia Cient√≠fica'")
        print("   - Papers con t√≠tulos completos")
        print("   - A√±os de publicaci√≥n")
        print("   - DOIs clickeables")
        print("   - Citas APA completas")
        print("   - Res√∫menes de los papers")
        print("6. Verifica que NO aparezca:")
        print("   - 'No se encontr√≥ evidencia cient√≠fica relevante'")
        print("   - Placeholder vac√≠o")

        print("\nüîç Verificaci√≥n t√©cnica:")
        print("7. Abre la consola del navegador (F12)")
        print("8. Busca estos logs:")
        print("   - 'Interceptando mensaje'")
        print("   - 'Comando de b√∫squeda detectado'")
        print("   - 'Tema de b√∫squeda extra√≠do'")
        print("   - 'Enviando b√∫squeda cient√≠fica'")
        print("   - 'displayEvidence' o 'displayUnifiedResults'")

        print("\n" + "=" * 60)
        print("üéØ Prueba completada")

    except Exception as e:
        print(f"‚ùå Error general: {e}")


if __name__ == "__main__":
    test_sidebar_papers()
