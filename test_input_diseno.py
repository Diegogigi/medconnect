#!/usr/bin/env python3
"""
Script de prueba para verificar que los cambios del dise√±o del input de mensajes se han aplicado correctamente
"""

import os
import re


def verificar_cambios_input():
    """Verifica que los cambios del dise√±o del input se hayan aplicado correctamente"""

    print("üîç Verificando cambios del dise√±o del input de mensajes...")

    # Archivo a verificar
    archivo = "templates/professional.html"

    cambios_verificados = {
        "auto_mode_indicator_padding": False,
        "auto_mode_indicator_margin": False,
        "auto_mode_indicator_border_radius": False,
        "auto_mode_text_size": False,
        "copilot_quick_input_styles": False,
        "copilot_quick_input_focus": False,
        "copilot_quick_input_placeholder": False,
        "input_container_margin": False,
        "input_placeholder_text": False,
    }

    if not os.path.exists(archivo):
        print(f"‚ùå Archivo no encontrado: {archivo}")
        return

    with open(archivo, "r", encoding="utf-8") as f:
        contenido = f.read()

    # Verificar cambios en auto-mode-indicator
    if re.search(r"\.auto-mode-indicator\s*{[^}]*padding:\s*8px 12px", contenido):
        cambios_verificados["auto_mode_indicator_padding"] = True
        print("‚úÖ auto-mode-indicator padding reducido")

    if re.search(r"\.auto-mode-indicator\s*{[^}]*margin:\s*12px 0", contenido):
        cambios_verificados["auto_mode_indicator_margin"] = True
        print("‚úÖ auto-mode-indicator margin reducido")

    if re.search(r"\.auto-mode-indicator\s*{[^}]*border-radius:\s*6px", contenido):
        cambios_verificados["auto_mode_indicator_border_radius"] = True
        print("‚úÖ auto-mode-indicator border-radius reducido")

    # Verificar cambios en auto-mode-text
    if re.search(r"\.auto-mode-text\s*{[^}]*font-size:\s*0\.8rem", contenido):
        cambios_verificados["auto_mode_text_size"] = True
        print("‚úÖ auto-mode-text font-size reducido")

    # Verificar estilos del input
    if re.search(r"#copilotQuickInput\s*{[^}]*height:\s*32px", contenido):
        cambios_verificados["copilot_quick_input_styles"] = True
        print("‚úÖ copilotQuickInput height reducido")

    if re.search(
        r"#copilotQuickInput:focus\s*{[^}]*border-color:\s*#667eea", contenido
    ):
        cambios_verificados["copilot_quick_input_focus"] = True
        print("‚úÖ copilotQuickInput focus styles aplicados")

    if re.search(
        r"#copilotQuickInput::placeholder\s*{[^}]*font-size:\s*0\.8rem", contenido
    ):
        cambios_verificados["copilot_quick_input_placeholder"] = True
        print("‚úÖ copilotQuickInput placeholder font-size reducido")

    # Verificar HTML del input
    if re.search(r'<div class="mt-1">', contenido):
        cambios_verificados["input_container_margin"] = True
        print("‚úÖ Input container margin reducido")

    if re.search(r'placeholder="Escribe tu mensaje aqu√≠\.\.\."', contenido):
        cambios_verificados["input_placeholder_text"] = True
        print("‚úÖ Input placeholder text actualizado")

    # Resumen de verificaci√≥n
    print("\nüìä Resumen de verificaci√≥n:")
    total_cambios = len(cambios_verificados)
    cambios_exitosos = sum(cambios_verificados.values())

    for cambio, verificado in cambios_verificados.items():
        estado = "‚úÖ" if verificado else "‚ùå"
        print(f"{estado} {cambio}")

    print(f"\nüéØ Progreso: {cambios_exitosos}/{total_cambios} cambios aplicados")

    if cambios_exitosos == total_cambios:
        print(
            "üéâ ¬°Todos los cambios del dise√±o del input se han aplicado correctamente!"
        )
        print("üí° El √°rea de entrada de mensajes ahora es m√°s peque√±a y sencilla")
        print("üí° El dise√±o es m√°s compacto y minimalista")
    else:
        print("‚ö†Ô∏è Algunos cambios del dise√±o no se han aplicado completamente")
        print("üí° Revisa los archivos manualmente si es necesario")


def generar_instrucciones_verificacion():
    """Genera instrucciones para verificar los cambios manualmente"""

    instrucciones = """
üîç INSTRUCCIONES PARA VERIFICAR MANUALMENTE:

1. üì± Abre la aplicaci√≥n en el navegador
2. üîç Ve a la p√°gina del profesional
3. üìã Abre la sidebar (bot√≥n en la esquina superior derecha)
4. üí¨ Busca el √°rea de entrada de mensajes en la parte inferior de la sidebar

5. ‚úÖ Verifica que el dise√±o es m√°s peque√±o y sencillo:
   - El rect√°ngulo del input es m√°s peque√±o (altura reducida)
   - El padding del contenedor es menor
   - El texto "IA Unificada" es m√°s peque√±o
   - El espaciado general es m√°s compacto

6. üé® Verifica los detalles del dise√±o:
   - El input tiene bordes m√°s sutiles
   - El placeholder dice "Escribe tu mensaje aqu√≠..."
   - El input se enfoca con un borde azul suave
   - No hay sombras excesivas

7. üìù Prueba el input:
   - Escribe un mensaje
   - Presiona Enter para enviar
   - Verifica que funciona correctamente
   - El input se limpia despu√©s de enviar

‚úÖ Si todo se ve m√°s compacto y sencillo, los cambios se han aplicado correctamente.
"""

    print(instrucciones)


if __name__ == "__main__":
    print("üöÄ Verificaci√≥n de cambios del dise√±o del input de mensajes")
    print("=" * 60)

    verificar_cambios_input()

    print("\n" + "=" * 60)
    generar_instrucciones_verificacion()
