#!/usr/bin/env python3
"""
Script para probar las mejoras en la generaci√≥n de preguntas
"""

def test_mejoras_preguntas():
    """Prueba las mejoras implementadas en la generaci√≥n de preguntas"""
    print("üéØ PRUEBA DE MEJORAS EN GENERACI√ìN DE PREGUNTAS")
    print("=" * 60)
    
    # Casos de prueba por profesi√≥n
    casos_prueba = [
        {
            'motivo': 'Dolor intenso en rodilla al caminar',
            'tipo_atencion': 'fisioterapia',
            'descripcion': 'Fisioterapia - Dolor de rodilla'
        },
        {
            'motivo': 'Dificultad para tragar alimentos',
            'tipo_atencion': 'fonoaudiologia',
            'descripcion': 'Fonoaudiolog√≠a - Problemas de degluci√≥n'
        },
        {
            'motivo': 'Ansiedad y estr√©s laboral',
            'tipo_atencion': 'psicologia',
            'descripcion': 'Psicolog√≠a - Ansiedad'
        },
        {
            'motivo': 'Dolor lumbar de 3 semanas',
            'tipo_atencion': 'kinesiologia',
            'descripcion': 'Kinesiolog√≠a - Dolor lumbar'
        },
        {
            'motivo': 'P√©rdida de peso y fatiga',
            'tipo_atencion': 'nutricion',
            'descripcion': 'Nutrici√≥n - P√©rdida de peso'
        },
        {
            'motivo': 'Dificultad para realizar actividades diarias',
            'tipo_atencion': 'terapia_ocupacional',
            'descripcion': 'Terapia Ocupacional - Limitaciones funcionales'
        },
        {
            'motivo': 'Control de presi√≥n arterial',
            'tipo_atencion': 'enfermeria',
            'descripcion': 'Enfermer√≠a - Control de signos vitales'
        },
        {
            'motivo': 'Dolor agudo en el pecho',
            'tipo_atencion': 'urgencia',
            'descripcion': 'Urgencia - Dolor tor√°cico'
        }
    ]
    
    print("‚úÖ Mejoras implementadas:")
    print("   1. Una sola pregunta relacionada al EVA 0/10")
    print("   2. Incluye tipo de dolor, localizaci√≥n, etc.")
    print("   3. Preguntas espec√≠ficas por profesi√≥n")
    print("   4. Preguntas espec√≠ficas por regi√≥n anat√≥mica")
    print("   5. M√°ximo 8 preguntas por caso")
    
    print("\nüìã Casos de prueba por profesi√≥n:")
    for i, caso in enumerate(casos_prueba, 1):
        print(f"   {i}. {caso['descripcion']}")
        print(f"      Motivo: {caso['motivo']}")
        print(f"      Tipo: {caso['tipo_atencion']}")
    
    print("\nüéØ Resultados esperados:")
    print("   ‚Ä¢ Una sola pregunta de EVA 0/10 por caso")
    print("   ‚Ä¢ Preguntas espec√≠ficas por profesi√≥n")
    print("   ‚Ä¢ Preguntas de localizaci√≥n y tipo de dolor")
    print("   ‚Ä¢ M√°ximo 8 preguntas relevantes")
    print("   ‚Ä¢ Sin duplicados")

def test_verificacion_mejoras():
    """Verificaci√≥n de las mejoras implementadas"""
    print("\nüîç VERIFICACI√ìN DE MEJORAS")
    print("=" * 60)
    
    print("‚úÖ Funciones modificadas:")
    print("   ‚Ä¢ generar_preguntas_evaluacion() - Mejorada")
    print("   ‚Ä¢ _get_preguntas_por_profesion() - Nueva")
    print("   ‚Ä¢ _get_preguntas_por_region() - Nueva")
    print("   ‚Ä¢ _get_preguntas_generales() - Nueva")
    print("   ‚Ä¢ analizar_motivo_consulta_mejorado() - Actualizada")
    
    print("\n‚úÖ Caracter√≠sticas implementadas:")
    print("   ‚Ä¢ Control de preguntas EVA (una sola)")
    print("   ‚Ä¢ Control de preguntas de dolor (sin duplicados)")
    print("   ‚Ä¢ Preguntas espec√≠ficas por profesi√≥n")
    print("   ‚Ä¢ Preguntas espec√≠ficas por regi√≥n anat√≥mica")
    print("   ‚Ä¢ Preguntas generales adaptadas")
    print("   ‚Ä¢ L√≠mite de 8 preguntas m√°ximo")
    
    print("\n‚úÖ Profesiones soportadas:")
    profesiones = [
        'fisioterapia', 'kinesiologia', 'fonoaudiologia', 'psicologia',
        'nutricion', 'terapia_ocupacional', 'enfermeria', 'urgencia'
    ]
    for i, profesion in enumerate(profesiones, 1):
        print(f"   {i}. {profesion}")
    
    print("\n‚úÖ Regiones anat√≥micas soportadas:")
    regiones = [
        'rodilla', 'hombro', 'columna', 'cadera', 'tobillo', 'codo', 'mu√±eca'
    ]
    for i, region in enumerate(regiones, 1):
        print(f"   {i}. {region}")

def test_casos_especificos():
    """Prueba casos espec√≠ficos de mejora"""
    print("\nüîç CASOS ESPEC√çFICOS DE MEJORA")
    print("=" * 60)
    
    casos_especificos = [
        {
            'caso': 'Dolor en rodilla',
            'mejora': 'Una sola pregunta EVA + preguntas espec√≠ficas de rodilla'
        },
        {
            'caso': 'Dolor lumbar',
            'mejora': 'Una sola pregunta EVA + preguntas espec√≠ficas de columna'
        },
        {
            'caso': 'Problemas de degluci√≥n',
            'mejora': 'Preguntas espec√≠ficas de fonoaudiolog√≠a'
        },
        {
            'caso': 'Ansiedad',
            'mejora': 'Preguntas espec√≠ficas de psicolog√≠a'
        },
        {
            'caso': 'P√©rdida de peso',
            'mejora': 'Preguntas espec√≠ficas de nutrici√≥n'
        }
    ]
    
    for i, caso in enumerate(casos_especificos, 1):
        print(f"   {i}. {caso['caso']}")
        print(f"      Mejora: {caso['mejora']}")

def main():
    """Funci√≥n principal de prueba de mejoras"""
    print("üöÄ PRUEBA DE MEJORAS EN GENERACI√ìN DE PREGUNTAS")
    print("=" * 60)
    
    try:
        # Prueba 1: Verificaci√≥n de mejoras
        test_mejoras_preguntas()
        
        # Prueba 2: Verificaci√≥n t√©cnica
        test_verificacion_mejoras()
        
        # Prueba 3: Casos espec√≠ficos
        test_casos_especificos()
        
        print("\nüìä RESUMEN DE MEJORAS:")
        print("=" * 60)
        print("‚úÖ Una sola pregunta EVA 0/10 por caso")
        print("‚úÖ Preguntas espec√≠ficas por profesi√≥n")
        print("‚úÖ Preguntas de localizaci√≥n y tipo de dolor")
        print("‚úÖ M√°ximo 8 preguntas relevantes")
        print("‚úÖ Sin duplicados")
        print("‚úÖ Aplicable a todas las profesiones")
        
        print("\nüéâ MEJORAS IMPLEMENTADAS EXITOSAMENTE:")
        print("   ‚Ä¢ Control inteligente de preguntas EVA")
        print("   ‚Ä¢ Preguntas espec√≠ficas por profesi√≥n")
        print("   ‚Ä¢ Preguntas de localizaci√≥n anat√≥mica")
        print("   ‚Ä¢ Preguntas de tipo de dolor")
        print("   ‚Ä¢ Sistema sin duplicados")
        print("   ‚Ä¢ L√≠mite de preguntas optimizado")
        
    except Exception as e:
        print(f"\n‚ùå Error durante la prueba: {e}")
        import traceback
        traceback.print_exc()

if __name__ == "__main__":
    main() 