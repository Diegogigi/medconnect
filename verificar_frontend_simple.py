#!/usr/bin/env python3
"""
Script simple para verificar elementos HTML del frontend
"""

import requests

def verificar_elementos_html():
    """Verifica que los elementos HTML necesarios est√©n presentes"""
    print("üîç VERIFICACI√ìN SIMPLE DE ELEMENTOS HTML")
    print("=" * 50)
    
    try:
        # Obtener la p√°gina professional
        response = requests.get("http://localhost:5000/professional", timeout=10)
        
        if response.status_code == 200:
            html_content = response.text
            print("‚úÖ P√°gina professional accesible")
            
            # Verificar elementos cr√≠ticos
            elementos_criticos = [
                'id="sugerenciasTratamiento"',
                'id="listaSugerenciasTratamiento"',
                'sugerirTratamientoConIA()',
                'mostrarTerminosDisponibles',
                'realizarBusquedaPersonalizada'
            ]
            
            elementos_encontrados = []
            for elemento in elementos_criticos:
                if elemento in html_content:
                    elementos_encontrados.append(elemento)
                    print(f"‚úÖ {elemento}")
                else:
                    print(f"‚ùå {elemento}")
            
            print(f"\nüìä Resultado: {len(elementos_encontrados)}/{len(elementos_criticos)} elementos encontrados")
            
            if len(elementos_encontrados) == len(elementos_criticos):
                print("‚úÖ TODOS LOS ELEMENTOS HTML EST√ÅN PRESENTES")
                print("\nüí° El frontend est√° configurado correctamente")
                print("üí° El problema puede ser de autenticaci√≥n o JavaScript")
                return True
            else:
                print("‚ùå FALTAN ELEMENTOS HTML")
                print("‚ùå Revisa la implementaci√≥n del frontend")
                return False
                
        elif response.status_code == 302:
            print("‚ö†Ô∏è Redirecci√≥n detectada - Probablemente a login")
            print("üí° Esto es normal, la p√°gina requiere autenticaci√≥n")
            return False
        else:
            print(f"‚ùå Error HTTP: {response.status_code}")
            return False
            
    except Exception as e:
        print(f"‚ùå Error de conexi√≥n: {e}")
        return False

def verificar_javascript():
    """Verifica que el archivo JavaScript est√© disponible"""
    print("\nüñ•Ô∏è VERIFICACI√ìN DE JAVASCRIPT")
    print("=" * 40)
    
    try:
        response = requests.get("http://localhost:5000/static/js/professional.js", timeout=10)
        
        if response.status_code == 200:
            js_content = response.text
            print("‚úÖ Archivo professional.js accesible")
            
            # Verificar funciones cr√≠ticas
            funciones_criticas = [
                'mostrarTerminosDisponibles',
                'realizarBusquedaPersonalizada',
                'realizarBusquedaAutomatica',
                'obtenerTerminosSeleccionados',
                'seleccionarTodosTerminos',
                'deseleccionarTodosTerminos'
            ]
            
            funciones_encontradas = []
            for funcion in funciones_criticas:
                if funcion in js_content:
                    funciones_encontradas.append(funcion)
                    print(f"‚úÖ {funcion}")
                else:
                    print(f"‚ùå {funcion}")
            
            print(f"\nüìä Resultado: {len(funciones_encontradas)}/{len(funciones_criticas)} funciones encontradas")
            
            if len(funciones_encontradas) == len(funciones_criticas):
                print("‚úÖ TODAS LAS FUNCIONES JAVASCRIPT EST√ÅN PRESENTES")
                return True
            else:
                print("‚ùå FALTAN FUNCIONES JAVASCRIPT")
                return False
                
        else:
            print(f"‚ùå Error HTTP: {response.status_code}")
            return False
            
    except Exception as e:
        print(f"‚ùå Error de conexi√≥n: {e}")
        return False

def main():
    """Funci√≥n principal"""
    print("üîç VERIFICACI√ìN SIMPLE DEL FRONTEND")
    print("=" * 50)
    
    # Verificar elementos HTML
    html_ok = verificar_elementos_html()
    
    # Verificar JavaScript
    js_ok = verificar_javascript()
    
    print("\nüìä RESUMEN")
    print("=" * 20)
    
    if html_ok and js_ok:
        print("‚úÖ FRONTEND CONFIGURADO CORRECTAMENTE")
        print("\nüí° El problema puede ser:")
        print("   1. Autenticaci√≥n requerida")
        print("   2. JavaScript no se ejecuta correctamente")
        print("   3. Endpoints del backend no funcionan")
        print("\nüîß Para probar manualmente:")
        print("   1. Ve a http://localhost:5000")
        print("   2. Inicia sesi√≥n como profesional")
        print("   3. Ve a la secci√≥n de atenci√≥n")
        print("   4. Llena un diagn√≥stico")
        print("   5. Haz clic en 'Sugerir Tratamiento con IA'")
    else:
        print("‚ùå PROBLEMAS EN EL FRONTEND")
        print("‚ùå Revisa la implementaci√≥n")

if __name__ == "__main__":
    main() 